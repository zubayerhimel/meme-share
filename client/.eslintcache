[{"F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\reportWebVitals.js":"1","F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\components\\ListOfMeme.jsx":"2","F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\components\\MemeCard.jsx":"3","F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\pages\\Registration.jsx":"4","F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\pages\\SignIn.jsx":"5","F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\index.js":"6","F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\pages\\Home.jsx":"7","F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\pages\\Dashboard.jsx":"8","F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\components\\Header.jsx":"9","F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\App.js":"10"},{"size":375,"mtime":1609566650440,"results":"11","hashOfConfig":"12"},{"size":1011,"mtime":1609575560549,"results":"13","hashOfConfig":"12"},{"size":1512,"mtime":1609577190599,"results":"14","hashOfConfig":"12"},{"size":5338,"mtime":1609592525160,"results":"15","hashOfConfig":"12"},{"size":4089,"mtime":1609584724183,"results":"16","hashOfConfig":"12"},{"size":461,"mtime":1609584578105,"results":"17","hashOfConfig":"12"},{"size":193,"mtime":1609566650438,"results":"18","hashOfConfig":"12"},{"size":4012,"mtime":1609592857285,"results":"19","hashOfConfig":"12"},{"size":1395,"mtime":1609566650435,"results":"20","hashOfConfig":"12"},{"size":757,"mtime":1609566650434,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yohdgr",{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\reportWebVitals.js",[],"F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\components\\ListOfMeme.jsx",["44"],"F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\components\\MemeCard.jsx",["45"],"F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\pages\\Registration.jsx",["46"],"F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\pages\\SignIn.jsx",["47"],"F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\index.js",[],["48","49"],"F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\pages\\Home.jsx",[],"F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\pages\\Dashboard.jsx",["50"],"import { Button, Container, Grid, TextField } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pt3: {\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  center: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  btn: {\r\n    textTransform: \"none\",\r\n    fontFamily: \"Nunito\",\r\n  },\r\n  image: {\r\n    height: 200,\r\n    maxWidth: 380,\r\n  },\r\n}));\r\n\r\nconst Dashboard = () => {\r\n  const classes = useStyles();\r\n\r\n  // useStates\r\n  const [image, setImage] = useState(\r\n    \"https://img.pngio.com/index-of-htdocs-content-plugins-slider-images-image-icon-png-800_600.png\"\r\n  );\r\n  const [imageId, setImageId] = useState(\"\");\r\n  const [memeInfo, setMemeInfo] = useState({\r\n    memeName: \"\",\r\n    description: \"\",\r\n  });\r\n  const { memeName, description } = memeInfo;\r\n  const [userId, setUserId] = useState(\"\");\r\n\r\n  const handleOnChange = (e) => {\r\n    setMemeInfo({ ...memeInfo, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const user_id = localStorage.getItem(\"userId\");\r\n    setUserId(user_id);\r\n  }, []);\r\n\r\n  // methods\r\n\r\n  const imageHandler = (e) => {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      if (reader.readyState === 2) {\r\n        setImage(reader.result);\r\n      }\r\n    };\r\n    reader.readAsDataURL(e.target.files[0]);\r\n    console.log(e.target.files[0]);\r\n\r\n    // publish image\r\n    const { files } = document.querySelector('input[type=\"file\"]');\r\n    const formData = new FormData();\r\n    formData.append(\"file\", files[0]);\r\n    formData.append(\"upload_preset\", \"ml_default\");\r\n    const options = {\r\n      method: \"POST\",\r\n      body: formData,\r\n    };\r\n\r\n    return fetch(\"https://api.Cloudinary.com/v1_1/dck5ccwjv/image/upload\", options)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        console.log(res);\r\n        setImage(res.url);\r\n        setImageId(res.asset_id);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const postInfo = {\r\n      memeName,\r\n      description,\r\n      imageId,\r\n      image,\r\n    };\r\n    // console.log(postInfo);\r\n    // console.log(userId);\r\n    axios\r\n      .post(`/api/posts/${userId}`, postInfo)\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container maxWidth=\"lg\" className={classes.pt3}>\r\n        <h1 className={classes.center}>Share a new Meme</h1>\r\n        <form noValidate onSubmit={(e) => handleSubmit(e)}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                label=\"Meme Name\"\r\n                variant=\"outlined\"\r\n                name=\"memeName\"\r\n                value={memeName}\r\n                onChange={(e) => handleOnChange(e)}\r\n                fullWidth></TextField>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                multiline\r\n                label=\"Description\"\r\n                name=\"description\"\r\n                value={description}\r\n                onChange={(e) => handleOnChange(e)}\r\n                variant=\"outlined\"\r\n                fullWidth></TextField>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <img src={image} alt=\"image\" className={classes.image} />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <input type=\"file\" accept=\".png, .jpg, .jpeg, .gif\" onChange={imageHandler} />\r\n            </Grid>\r\n          </Grid>\r\n          <div className={classes.center}>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.btn}>\r\n              Publish Meme\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\components\\Header.jsx",[],"F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\App.js",[],{"ruleId":"51","severity":1,"message":"52","line":22,"column":13,"nodeType":"53","endLine":27,"endColumn":4},{"ruleId":"54","severity":1,"message":"55","line":4,"column":8,"nodeType":"56","messageId":"57","endLine":4,"endColumn":14},{"ruleId":"54","severity":1,"message":"58","line":1,"column":27,"nodeType":"56","messageId":"57","endLine":1,"endColumn":36},{"ruleId":"54","severity":1,"message":"58","line":1,"column":17,"nodeType":"56","messageId":"57","endLine":1,"endColumn":26},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":125,"column":15,"nodeType":"65","endLine":125,"endColumn":72},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-unused-vars","'moment' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","no-native-reassign",["66"],"no-negated-in-lhs",["67"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]