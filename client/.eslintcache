[{"F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\reportWebVitals.js":"1","F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\components\\ListOfMeme.jsx":"2","F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\components\\MemeCard.jsx":"3","F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\pages\\Registration.jsx":"4","F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\pages\\SignIn.jsx":"5","F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\index.js":"6","F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\pages\\Home.jsx":"7","F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\pages\\Dashboard.jsx":"8","F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\components\\Header.jsx":"9","F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\App.js":"10","F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\pages\\SingleMeme.jsx":"11"},{"size":375,"mtime":1609566650440,"results":"12","hashOfConfig":"13"},{"size":1005,"mtime":1609947677280,"results":"14","hashOfConfig":"13"},{"size":1393,"mtime":1609595762999,"results":"15","hashOfConfig":"13"},{"size":5354,"mtime":1609606484355,"results":"16","hashOfConfig":"13"},{"size":4185,"mtime":1609607499079,"results":"17","hashOfConfig":"13"},{"size":461,"mtime":1609584578105,"results":"18","hashOfConfig":"13"},{"size":193,"mtime":1609566650438,"results":"19","hashOfConfig":"13"},{"size":4070,"mtime":1609948133129,"results":"20","hashOfConfig":"13"},{"size":1395,"mtime":1609566650435,"results":"21","hashOfConfig":"13"},{"size":870,"mtime":1609596204339,"results":"22","hashOfConfig":"13"},{"size":2129,"mtime":1609929868414,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yohdgr",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\reportWebVitals.js",[],"F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\components\\ListOfMeme.jsx",[],"F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\components\\MemeCard.jsx",[],"F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\pages\\Registration.jsx",["49"],"import React, { useState, useEffect } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Snackbar } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  blue: {\r\n    color: \"blue\",\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  // states\r\n  const [snackOpen, setSnackOpen] = useState(false);\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirm_password: \"\",\r\n  });\r\n  const { name, email, password, confirm_password } = formData;\r\n\r\n  // methods\r\n  const handleOnChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirm_password) {\r\n      console.log(`password don't match`);\r\n      setMsg(\"Password incorrect\");\r\n      controlSnack();\r\n    } else {\r\n      axios\r\n        .post(\"/api/auth/signup\", {\r\n          name,\r\n          email,\r\n          password,\r\n        })\r\n        .then((res) => {\r\n          const userId = res.data.user._id;\r\n          localStorage.setItem(\"userId\", userId);\r\n          history.push(\"/dashboard\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setMsg(\"Something went wrong\");\r\n          controlSnack();\r\n        });\r\n      console.log(formData);\r\n    }\r\n  };\r\n\r\n  const controlSnack = () => {\r\n    setSnackOpen(true);\r\n    setTimeout(() => {\r\n      setSnackOpen(false);\r\n    }, 3000);\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={(e) => handleSubmit(e)}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"name\"\r\n                value={name}\r\n                onChange={(e) => handleOnChange(e)}\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                value={email}\r\n                onChange={(e) => handleOnChange(e)}\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                onChange={(e) => handleOnChange(e)}\r\n                value={password}\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                onChange={(e) => handleOnChange(e)}\r\n                value={confirm_password}\r\n                name=\"confirm_password\"\r\n                label=\"Confirm password\"\r\n                type=\"password\"\r\n                id=\"confirm_password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link to=\"/signin\" variant=\"body2\" className={classes.blue}>\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\r\n        open={snackOpen}\r\n        autoHideDuration={4000}\r\n        message={msg}></Snackbar>\r\n    </Container>\r\n  );\r\n}\r\n","F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\pages\\SignIn.jsx",["50"],"import React, { useEffect, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport axios from \"axios\";\r\nimport { Snackbar } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  blue: {\r\n    color: \"blue\",\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const [snackOpen, setSnackOpen] = useState(false);\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirm_password: \"\",\r\n  });\r\n  const { email, password } = formData;\r\n  const handleOnChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (email === \"\" || password === \"\") {\r\n      setMsg(\"Insufficient credential\");\r\n      controlSnack();\r\n    } else {\r\n      axios\r\n        .post(\"/api/auth/login\", {\r\n          email,\r\n          password,\r\n        })\r\n        .then((res) => {\r\n          console.log(res);\r\n          const userId = res.data.user._id;\r\n          localStorage.setItem(\"userId\", userId);\r\n          history.push(\"/dashboard\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setMsg(\"Something went wrong\");\r\n          controlSnack();\r\n        });\r\n      console.log(formData);\r\n    }\r\n  };\r\n\r\n  const controlSnack = () => {\r\n    setSnackOpen(true);\r\n    setTimeout(() => {\r\n      setSnackOpen(false);\r\n    }, 3000);\r\n  };\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={(e) => handleSubmit(e)}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            onChange={(e) => handleOnChange(e)}\r\n            value={email}\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => handleOnChange(e)}\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n            Sign In\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link to=\"/registration\" variant=\"body2\" className={classes.blue}>\r\n                Don't have an account? Sign Up\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\r\n        open={snackOpen}\r\n        autoHideDuration={4000}\r\n        message={msg}></Snackbar>\r\n    </Container>\r\n  );\r\n}\r\n","F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\index.js",[],["51","52"],"F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\pages\\Home.jsx",[],"F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\pages\\Dashboard.jsx",["53"],"F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\components\\Header.jsx",[],"F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\App.js",[],"F:\\Web Project\\Vue practice\\JOOOOOOOB\\meme-sharer\\client\\src\\pages\\SingleMeme.jsx",["54"],{"ruleId":"55","severity":1,"message":"56","line":1,"column":27,"nodeType":"57","messageId":"58","endLine":1,"endColumn":36},{"ruleId":"55","severity":1,"message":"56","line":1,"column":17,"nodeType":"57","messageId":"58","endLine":1,"endColumn":26},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":127,"column":15,"nodeType":"65","endLine":127,"endColumn":72},{"ruleId":"66","severity":1,"message":"67","line":56,"column":37,"nodeType":"68","messageId":"69","endLine":56,"endColumn":39},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["70"],"no-negated-in-lhs",["71"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]